{"version":3,"sources":["ColumnFilter.js","App.js","index.js"],"names":["ColumnFilter","column","setFilter","filterValue","count","preFilteredRows","length","value","placeholder","onChange","e","target","undefined","App","useState","loading","data","randomUserTableData","setRandomUserTableData","columns","React","useMemo","Header","accessor","useEffect","fetch","then","response","json","results","defaultColumn","Filter","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","style","border","class","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","background","fontWeight","color","borderBottom","render","canFilter","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","padding","ReactDOM","document","getElementById"],"mappings":"4LAeeA,MAbf,YAAgF,IAAD,IAAvDC,OAAUC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YACrCC,EADuE,EAArBC,gBAC1BC,OAE9B,OACE,uBACEC,MAAOJ,GAAe,GACtBK,YAAW,iBAAYJ,EAAZ,YACXK,SAAU,SAACC,GACTR,EAAUQ,EAAEC,OAAOJ,YAASK,OC6GrBC,MAnHf,WACE,MAAsDC,mBAAS,CAC7DC,SAAS,EACTC,KAAM,KAFR,mBAAOC,EAAP,KAA4BC,EAA5B,KAKMC,EAAUC,IAAMC,SACpB,iBAAM,CACJ,CACEC,OAAQ,SACRC,SAAU,UAEZ,CACED,OAAQ,YACRC,SAAU,cAEZ,CACED,OAAQ,WACRC,SAAU,gBAGd,IAGFC,qBAAU,WACRC,MAAM,yCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLT,EAAuB,CACrBF,KAAMW,EAASE,QACfd,SAAS,SAGd,IAEH,IAAMe,EAAgBV,IAAMC,SAC1B,iBAAO,CACLU,OAAQ/B,KAEV,IAEF,EACEgC,mBACE,CAAEb,UAASH,KAAMC,EAAoBD,KAAMc,iBAC3CG,aACAC,aAJIC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,kBAAmBC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,KAAMC,EAA9D,EAA8DA,WAO9D,OAAItB,EAAoBF,QACf,6CAGP,cAAC,WAAD,UACE,sBAAKyB,UAAU,4CAAf,2BAEE,kDACML,KADN,IAEEM,MAAO,CAAEC,OAAQ,kBACjBC,MAAM,UAHR,UAKE,gCACGN,EAAaO,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAC3C,GAAD,OACvB,+CACMA,EAAO+C,eAAe/C,EAAOgD,yBADnC,IAEER,MAAO,CACLS,WAAY,OACZC,WAAY,OACZC,MAAO,QACPC,aAAc,kBANlB,UASGpD,EAAOqD,OAAO,UACf,8BACGrD,EAAOsD,UAAYtD,EAAOqD,OAAO,UAAY,OAE/CrD,EAAOuD,SACJvD,EAAOwD,aACL,gBACA,gBACF,kBAMd,iDAAWrB,KAAX,aACGE,EAAKM,KAAI,SAACc,GAET,OADAnB,EAAWmB,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMhB,KAAI,SAACiB,GACd,OACE,8CACMA,EAAKC,gBADX,IAEErB,MAAO,CACLsB,QAAS,OACTrB,OAAQ,iBACRQ,WAAY,SALhB,SAQGW,EAAKP,OAAO,iC,MCrGrCU,IAASV,OAAO,cAAC,EAAD,IAASW,SAASC,eAAe,W","file":"static/js/main.471e2703.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ColumnFilter({ column: { setFilter, filterValue, preFilteredRows } }) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      value={filterValue || \"\"}\n      placeholder={`Search ${count} records`}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    />\n  );\n}\nexport default ColumnFilter;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport { useTable, useSortBy, useFilters } from \"react-table\";\nimport ColumnFilter from \"./ColumnFilter\";\n\nfunction App() {\n  const [randomUserTableData, setRandomUserTableData] = useState({\n    loading: true,\n    data: [],\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"gender\",\n        accessor: \"gender\",\n      },\n      {\n        Header: \"firstName\",\n        accessor: \"name.first\",\n      },\n      {\n        Header: \"lastName\",\n        accessor: \"name.last\",\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?results=25\")\n      .then((response) => response.json())\n      .then((response) => {\n        setRandomUserTableData({\n          data: response.results,\n          loading: false,\n        });\n      });\n  }, []);\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: ColumnFilter,\n    }),\n    []\n  );\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      { columns, data: randomUserTableData.data, defaultColumn },\n      useFilters,\n      useSortBy\n    );\n\n  if (randomUserTableData.loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Fragment>\n      <div className=\"bg-secondary font-weight-bold text-center\">\n        USER DIRECTORY\n        <table\n          {...getTableProps()}\n          style={{ border: \"solid 1px grey\" }}\n          class=\"mx-auto\"\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    style={{\n                      background: \"grey\",\n                      fontWeight: \"bold\",\n                      color: \"black\",\n                      borderBottom: \"solid 3px grey\",\n                    }}\n                  >\n                    {column.render(\"Header\")}\n                    <div>\n                      {column.canFilter ? column.render(\"Filter\") : null}\n                    </div>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”½\"\n                        : \" ðŸ”¼\"\n                      : \"\"}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: \"20px\",\n                          border: \"solid 1px gray\",\n                          background: \"beige\",\n                        }}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}